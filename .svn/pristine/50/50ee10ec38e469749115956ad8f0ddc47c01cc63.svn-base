package com.mpark.mpark;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.os.SystemClock;
import android.util.Log;
import android.view.View;
import android.widget.Chronometer;
import android.widget.ImageView;

import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.Query;
import com.google.firebase.database.ValueEventListener;

public class TimerRunning extends Activity {

    Chronometer chronometer;
    FirebaseDatabase fbDb = FirebaseDatabase.getInstance();
    DatabaseReference parkings = fbDb.getReference("parkings");
    public String activeStatus = "";
    String startTime;
    String keyofCurrentParking;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_timer_running);
        chronometer = findViewById(R.id.chronometer);

        parkings.addValueEventListener(dataListener);

        ImageView iVStopParking = findViewById(R.id.iVPay);
        iVStopParking.setOnClickListener(payListener);
    }

    private ValueEventListener dataListener = new ValueEventListener() {
        @Override
        public void onDataChange(DataSnapshot dataSnapshot) {
            DataSnapshot postSnapShot=null;
            for (DataSnapshot postSnapshot: dataSnapshot.getChildren()){
                postSnapShot = postSnapshot;
            }
            activeStatus = postSnapShot.child("status").getValue().toString();
            startTime = postSnapShot.child("startTime").getValue().toString();
            keyofCurrentParking = postSnapShot.getKey();
            System.out.println("Start Time  " + startTime);
            startTimer();
        }

        @Override
        public void onCancelled(DatabaseError databaseError) {

        }
    };

    private View.OnClickListener payListener = new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            parkings.child(keyofCurrentParking).child("status").setValue("Inactive");
            parkings.child(keyofCurrentParking).child("endTime").setValue(System.currentTimeMillis());
            Intent i = new Intent(TimerRunning.this,Ticket.class);
            startActivity(i);
            finish();
        }
    };

    private void startTimer() {
        if (activeStatus.equalsIgnoreCase("Active")) {
            long time = Long.parseLong(startTime);
            long elapsed = System.currentTimeMillis()-time;
            System.out.println(elapsed);
            chronometer.setBase(SystemClock.elapsedRealtime() - elapsed);
            chronometer.start();
        }

    }

    @Override
    protected void onStop() {
        super.onStop();
        parkings.removeEventListener(dataListener);
    }
}


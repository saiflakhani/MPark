package com.mpark.mpark;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.support.annotation.NonNull;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseAuthException;
import com.google.firebase.auth.FirebaseUser;
import com.google.firebase.database.DataSnapshot;
import com.google.firebase.database.DatabaseError;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.database.ValueEventListener;

public class RegisterActivity extends Activity {
    private FirebaseAuth mAuth;
    FirebaseDatabase fbDb = FirebaseDatabase.getInstance();
    DatabaseReference parkings = fbDb.getReference("parkings");
    boolean redirect = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_register);
        mAuth = FirebaseAuth.getInstance();
        System.out.println(mAuth);
        Button register = findViewById(R.id.btnRegister);
        Button login = findViewById(R.id.login);
        register.setOnClickListener(registerClickListener);
        login.setOnClickListener(loginClickListener);

    }

    private View.OnClickListener registerClickListener = new View.OnClickListener() {
        @Override
        public void onClick(View v) {
            registerUser();
        }
    };
    private View.OnClickListener loginClickListener = new View.OnClickListener() {
        @Override
        public void onClick(View v) {

            EditText email = findViewById(R.id.eTEmail);
            EditText password = findViewById(R.id.eTPassword);
            mAuth.signInWithEmailAndPassword(email.getText().toString(), password.getText().toString()).addOnCompleteListener(new OnCompleteListener<AuthResult>() {
                @Override
                public void onComplete(@NonNull Task<AuthResult> task) {
                    if (mAuth.getCurrentUser() != null) {
                        checkAndRedirect();
                    }
                }
            });

        }
    };

    @Override
    protected void onStart() {
        super.onStart();
        FirebaseUser currentUser = mAuth.getCurrentUser();
        //Log.d("Current User",currentUser.getDisplayName());
        if(currentUser!=null){
            Intent i = new Intent(RegisterActivity.this,StartParkingActivity.class);
            startActivity(i);
            finish();
        }
    }

    protected void registerUser()
    {
        EditText email = findViewById(R.id.eTEmail);
        EditText password = findViewById(R.id.eTPassword);
        mAuth.createUserWithEmailAndPassword(email.getText().toString(),password.getText().toString()).addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
            @Override
            public void onComplete(@NonNull Task<AuthResult> task) {
                if (task.isSuccessful()) {
                    // Sign in success, update UI with the signed-in user's information
                    Log.d("TAG", "createUserWithEmail:success");
                    FirebaseUser user = mAuth.getCurrentUser();
                } else {
                    // If sign in fails, display a message to the user.
                    Log.d("TAG", "createUserWithEmail:failure", task.getException());
                    Toast.makeText(RegisterActivity.this, "Authentication failed.",
                            Toast.LENGTH_SHORT).show();

                }
            }
        });
        Intent i = new Intent(RegisterActivity.this,StartParkingActivity.class);
        startActivity(i);
        finish();
    }

    private boolean checkAndRedirect()
    {
        parkings.addValueEventListener(new ValueEventListener() {
            @Override
            public void onDataChange(DataSnapshot dataSnapshot) {
                DataSnapshot postSnapShot = null;
                for (DataSnapshot postSnapshot : dataSnapshot.getChildren()) {
                    postSnapShot = postSnapshot;
                }
                String status = postSnapShot.child("status").getValue().toString();
                if (status.equalsIgnoreCase("Active")) {
                    Intent i = new Intent(RegisterActivity.this, TimerRunning.class);
                    startActivity(i);
                    redirect = true;
                    finish();
                }else{
                    Intent i = new Intent(RegisterActivity.this, StartParkingActivity.class);
                    startActivity(i);
                    finish();
                }
            }
            @Override
            public void onCancelled(DatabaseError databaseError) {

            }

    });

        return redirect;
    }



}
